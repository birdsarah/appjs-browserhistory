# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := appjs
DEFS_Debug := '-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__LINUX__' \
	'-D__UBUNTU__' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := -fPIC \
	-Wall \
	-pthread \
	-m64 \
	-fPIC \
	-Wall \
	-std=c++0x \
	-pthread \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/x86_64-linux-gnu/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/gdk-pixbuf-2.0 \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/freetype2 \
	-I/usr/include/libpng12 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug := 

# Flags passed to only C++ files.
CFLAGS_CC_Debug := -fno-rtti \
	-fno-exceptions

INCS_Debug := -I/home/bird/.node-gyp/0.8.2/src \
	-I/home/bird/.node-gyp/0.8.2/deps/uv/include \
	-I/home/bird/.node-gyp/0.8.2/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/deps/cef

DEFS_Release := '-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__LINUX__' \
	'-D__UBUNTU__'

# Flags passed to all source files.
CFLAGS_Release := -fPIC \
	-Wall \
	-pthread \
	-m64 \
	-fPIC \
	-Wall \
	-std=c++0x \
	-pthread \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/x86_64-linux-gnu/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/gdk-pixbuf-2.0 \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/freetype2 \
	-I/usr/include/libpng12 \
	-O3 \
	-fdata-sections \
	-ffunction-sections \
	-fno-strict-aliasing

# Flags passed to only C files.
CFLAGS_C_Release := 

# Flags passed to only C++ files.
CFLAGS_CC_Release := -fno-rtti \
	-fno-exceptions

INCS_Release := -I/home/bird/.node-gyp/0.8.2/src \
	-I/home/bird/.node-gyp/0.8.2/deps/uv/include \
	-I/home/bird/.node-gyp/0.8.2/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/deps/cef

OBJS := $(obj).target/$(TARGET)/src/main.o \
	$(obj).target/$(TARGET)/src/appjs.o \
	$(obj).target/$(TARGET)/src/appjs_app.o \
	$(obj).target/$(TARGET)/src/appjs_window.o \
	$(obj).target/$(TARGET)/src/base/native_window.o \
	$(obj).target/$(TARGET)/src/includes/cef_handler.o \
	$(obj).target/$(TARGET)/src/includes/cef.o \
	$(obj).target/$(TARGET)/src/includes/cef_loop.o \
	$(obj).target/$(TARGET)/src/includes/cef_scheme_handler.o \
	$(obj).target/$(TARGET)/src/includes/cef_sync_handler.o \
	$(obj).target/$(TARGET)/src/includes/util.o \
	$(obj).target/$(TARGET)/src/includes/cef_base_gtk.o \
	$(obj).target/$(TARGET)/src/includes/cef_handler_gtk.o \
	$(obj).target/$(TARGET)/src/linux/native_window_linux.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/deps/cef/cef_dll_wrapper.node

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := -pthread \
	-m64 \
	-rdynamic \
	-Wl,-R,'$$ORIGIN/'

LDFLAGS_Release := -pthread \
	-m64 \
	-rdynamic \
	-Wl,-R,'$$ORIGIN/'

LIBS := -lgtk-x11-2.0 \
	-lgdk-x11-2.0 \
	-latk-1.0 \
	-lgio-2.0 \
	-lpangoft2-1.0 \
	-lpangocairo-1.0 \
	-lgdk_pixbuf-2.0 \
	-lcairo \
	-lpango-1.0 \
	-lfreetype \
	-lfontconfig \
	-lgobject-2.0 \
	-lgthread-2.0 \
	-lrt \
	-lglib-2.0 \
	/media/IDD/Documents-IDD/Programs/appjs-latest/appjs/deps/cef/Release/lib.target/libcef.so \
	/media/IDD/Documents-IDD/Programs/appjs-latest/appjs/build/Release/obj.target/deps/cef/cef_dll_wrapper.node

$(obj).target/appjs.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/appjs.node: LIBS := $(LIBS)
$(obj).target/appjs.node: TOOLSET := $(TOOLSET)
$(obj).target/appjs.node: $(OBJS) $(obj).target/deps/cef/cef_dll_wrapper.node FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/appjs.node
# Add target alias
.PHONY: appjs
appjs: $(builddir)/appjs.node

# Copy this to the executable output path.
$(builddir)/appjs.node: TOOLSET := $(TOOLSET)
$(builddir)/appjs.node: $(obj).target/appjs.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/appjs.node
# Short alias for building this executable.
.PHONY: appjs.node
appjs.node: $(obj).target/appjs.node $(builddir)/appjs.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/appjs.node

